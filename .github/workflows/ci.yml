name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint || echo "Linting not configured"

    - name: Run type check
      run: npx tsc --noEmit

    - name: Run unit tests
      run: npm test
      env:
        NODE_ENV: test
        MONGO_URL: mongodb://localhost:27017/test_db
        REDIS_URL: redis://localhost:6379

    - name: Run test coverage
      run: npm run test:coverage

    - name: Build application
      run: npm run build

    - name: Run integration tests
      run: |
        npm run build
        timeout 30s npm start &
        sleep 10
        npm run test:mongoose
        pkill -f "node dist/src/main.js" || true
      env:
        NODE_ENV: test
        MONGO_URL: mongodb://localhost:27017/test_db
        REDIS_URL: redis://localhost:6379

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    - run: npm ci
    - name: Run security audit
      run: npm audit --audit-level moderate

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    - run: npm ci
    - run: npm run build
    
    - name: Build Docker image
      run: docker build -t load-tester:${{ github.sha }} .
    
    - name: Save Docker image
      run: docker save load-tester:${{ github.sha }} | gzip > load-tester.tar.gz
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: load-tester.tar.gz
